大家好，这里介绍一下近期制作的FGO脚本，能够实现自动刷本，识别指令卡并按照策略选择。
首先是实战环节，在各项设置都设置好的情况下，我们可以从选择关卡界面自动进入右侧关卡列表最上方的一个关卡，这也是通常默认为执行上一次任务的关卡。我不指望这个脚本能够对初见的关卡有所帮助，但是经过测试,3t以内的本实际上是勉强可以的，在手动将关卡入口放置在该位置即可，最后在结算界面有点小问题，这将导致不能多次战斗。这个一会儿再说。
接下来看一看这个脚本的实际使用效果。
首先选择关卡，进入选助战界面。用户在设置界面提供助战从者与礼装后，匹配到一个同时满足从者条件和礼装条件时就选择该助战。
进入战斗后，当识别到这是可操作的场景时，按照预定策略释放技能。完成后进入指令卡选择环节，脚本能够识别指令卡对应的角色以及颜色，依据策略选择指令卡。后续两回合比较类似，这里加速处理了。
最后进入结算界面，连点几下进入再次战斗界面，一次战斗就算完成了。语音键入。

接下来讲讲之前的视频没有提到的画面
*插入对应视频
第一、吃苹果界面，能够根据吃苹果的策略选择苹果
第二、角色指令卡形象确认，在准备战斗界面长按角色头像进入角色详情，向下滑找到角色的一张红卡指令卡，由此截取角色的指令卡形象。不然连角色在指令卡里面长什么样都不知道，肯定没法进行优先选择了。由于在脚本多次战斗周期内，并没有阵容的变换，因此只会在第一次进入战斗的时候进行查看。第二次往上不再查看以节约时间。
最后、再次战斗选择，这就是简单的根据设置点击了。

接下来是设置部分内容的讲解。

总体来说，在左侧目录实现了上一版本未能实现的功能，似乎上个版本发布的时候还有一点残留（点击左侧按钮会把右侧定位到固定位置）。但是这个版本实现了指哪打哪。点击左侧标签栏，右侧就能跳转到相应位置并让标签高光。当右侧滚动时，左侧的选中高光也会随之变化。能够更好的提示你现在所在的位置（MAA有的功能，我觉的很帅，看着简单但是自己写感觉有点难）。其次加入了父目录，将设置包含成了三大模块，分别时战斗、模拟器和搓丸子，搓丸子就是将抽友情池溢出的礼装全部喂给一个没用的礼装，将其等级喂高，待到有需要时，将其喂给有用的礼装。按照Mooncell的说法，这种操作还能够节省qp。因此，个人觉得还是挺有必要也急需自动化的（个人在此前没搓过丸子，被别人提醒了觉得确实有必要加这个功能）

首先是策略，如果有看过上一篇文章的，会对这里熟悉一点。但是指令卡机制有大幅改动。
最上方策略的选择，非常直观，选到啥就是啥，值得注意的时，这个选择在运行界面有对应的快捷设置，可以方便的调整
下面是增添策略和删除策略的按钮，对于box比较多的玩家来说，每次更换策略就要重新输入是及其麻烦的，我一开始选择了使用三种策略备选槽的方法，发现即使是对我自己而言，三个策略存储的位置也完全不够用。因此现在采用了无上限自定义数目的方式。点击增添策略即可以在最下方添加策略，其中的默认设置是复制前一个策略的。点击删除策略可以删除最后一个策略，没有留档，所以想点着玩玩的最好先多添加几个策略，同时在平时保证最后有几个冗余的策略防止自己手贱。
对于每一个策略来说，它是一个可以打开的标签，点击后展开成7个输入框
第一行是策略的名称，你可以对此进行自定义，其余地方的策略名称将随之实时改变。
第二、四、六行是技能的策略：可以看到，技能策略是由三个数字一组组成的，其中每三个数字代表一个技能的释放参数，称作技能参数，第一个数字代表释放技能的从者编号，从左至右为1，2，3，除此之外，4代表御主礼装释放，特别的，530单独代表换人操作，请注意，换人只支持第三、四位的替换，在编写策略的时候要把站位给替换正确，让自己将要替换的从者和将要上场的从者处于正确的位置。第二个数字代表从者要释放的技能的编号，每个从者或者御主礼装都固定有三个技能，因此编号范围为1，2，3.第三个数字代表释放对象的选择，从左至右为1，2，3，如果技能不是以单体或者自身为对象的技能，那么该编号应当为0.每个技能参数之间使用空格分隔。
第三、五、七行是指令卡的策略：之前的指令卡策略因为不能识别角色和颜色，所以用简单的从左至右将宝具编号为abc，指令卡编号为1，2，3，4，5.在不需要指令卡的战斗中，这无关紧要，但是随着90++出现，即便有特定的应对阵容，通常也需要补刀以节省通关时间。因此我对指令卡机制做了改动，使之尽可能适配高压环境。因为共可以选择三张指令卡，所以指令卡分为三个部分，每个部分以斜杠分割，共计两个斜杠。单张指令卡参数可以分为两种，第一种是指定位置的指令卡，编号方式与之前的编号类似，但是有所变动：由于颜色系统的加入，红绿蓝对应的rgb挤占了前三个字母对应的abc的位置，因此将宝具编号从左至右改为zxc，主要为了按键在左下角比较顺手，指令卡位置参数不变依旧是1到5.第二种是对指令卡进行优先级排序，选择第一个没有被选择过的且优先级最高的卡。三个角色均有三种颜色的指令卡，共计9种，指令卡参数为形似b1的字母数字组合。字母代表指令卡的颜色，r对应红，g对应绿，b对应蓝。角色从左至右编码为123，不同参数之间使用空格分割.在指令卡参数中，从左至右代表优先级的从高到低。因为指令卡一次只发五张，拿不拿得到最高优先级的卡还得看发牌员脸色，所以没有高优先级的指令卡时就得选择其他的卡。在编码时我们不需要将九种卡全都写进去（当然要是乐意也可以），当写在策略中的指令卡全都找不到的时候，将从左至右选择第一个没有选择过的卡。当助战从者与场上从者指令卡形象相同时，会出现识别错误的情况，但是这并不影响结果，因为这两个之间选错了也没啥。目前可能识别错误或者识别失败，指令卡颜色识别失败时，显示的颜色判断为n，从者编号判断为助战从者编号。


第二部分是助战礼装的选择。与之前文章中所述内容基本一致，ui有所变动。当点击更新键时，将在助战界面选择最顶上的从者，将其形象和礼装保存至本地。请注意在点击更新按钮的时候应当保持与模拟器链接开启并能够正常抓取画面，不然保存的图片将会是旧图片而非最新的设置。通常我们只选择固定角色作为助战，否则释放助战角色技能时将前后效果不一导致失败，但是好友显示的头像又并非同一，当关闭好友从者满破图片显示这一设置后，同一从者的头像可能性数目就是三个。通常礼装我们只选择一个或者两个作为备选，使得加成能够最大化，但当在刷周回本或者活动礼装特别多的本时，你不怎么关心加成如何，但只选择一两个礼装的话，刷新半天也找不到想要的从者，因此设置了是否关心礼装这一设置，关闭后就能够无视礼装是否匹配，只关心从者的形象。当脚本在选择助战时，它会将匹配任意设置中从者图片以及礼装的位置，如果存在任意二者的位置关系满足条件（从者图片位置在礼装图片位置上方某一定值），就会点击从者位置完成选择。所以这里并不选择设置中选定的从者与礼装组合，混搭也是可以的。

第三部分是多次战斗，与上一个版本完全一致。
第一个是是否多次战斗的设置，不勾选的话，不论战斗次数设置多少，都只进行一次。在勾选多次战斗的时候，设置战斗次数即可以刷很多轮。如果想刷一晚上不停的话。设置成9999吧。这我真试过，无限池巨爽无比。最后是苹果类型的设置，你可以选择金银蓝铜或者不吃苹果，用于自己不太算的清楚几轮可以把体力刷光但是又不想吃苹果的情况。此时即便战斗次数大于清空体力所需轮数，也会停止。

第四部分是指令卡形象的设置，这部分是脚本能够识别不同任务的指令卡的核心所在。在框内提供了四张指令卡形象，从左往右分别为前四个从者的指令卡形象，其背景与指令卡部分为大红色，rgb为ff0000，代表这是脚本不关心的部分，相当于抠图了。由于策略方面对助战从者的占位有所要求（只能第三四名从者之间的换人），但是助战从者的指令卡形象却可能有所不同，我不希望在每次战斗的时候都将从者的详情界面点进去往下翻很久，这太浪费时间了，所以我选择不识别助战从者的图像，当指令卡形象与其他几张均不匹配时，就认为其属于助战从者的图像。因此在设置界面需要选择助战从者所在的位置，范围为1到4。但是如果不有所限制，脚本将在每次战斗的开始，将除助战外所有的从者详情界面里的指令卡形象读取一边，这将浪费很多时间。如果你所选择的队伍是上次用过的老队伍，并没有变换设置，就完全没有必要进行读取操作，因此在这里提供是否在第一次战斗的时候读取角色指令卡形象的设置，不勾选就不再第一次战斗的时候确认了。从者形象将沿用上次战斗的设置。

下一部分是模拟器的选择，需要根据模拟器的性质进行设置。首先你可以自行添加模拟器的名称，点击模拟器列表可以查看当前已有的模拟器信息，包含模拟器的名称和adb-ip地址，我们可以使用adb对安卓系统进行操作。adb链接模拟器是使用minitouch对其操作的先决条件。选择好模拟器后，可以点击模拟器链接测试，测试其是否能够进行adb链接，如果链接失败则需要检查，可能是模拟器没有开启，或者ip地址输入错误的缘故。下面两行可以添加删除模拟器信息。添加时，录入的模拟器信息为右侧，分别问名称和ip，中间用空格分割。因此模拟器名称是不支持含有空格的，它不会报错，但是实际将执行错误。点击模拟器删除，则会将右侧列表中选中的模拟器删除，同样不会留档，需要留意不会将可能使用的模拟器信息删除。下面两个按钮可以安装minicap和minitouch并且对其进行查看。安装过程可能失败，因为可能不存在minicap.so对应的版本，后面再谈。点击后右侧将生成它的struc类型和sdk版本。每个版本都对应不同的minicap、minicap.so、minitouch文件。其中minicap与minicap.so文件将支持minicap的调用，使之能够获取屏幕信息。minitouch文件将支持对模拟器进行点击、滑动操作。需要注意的是，这个版本的文件夹中minicap.so文件只支持到sdk31，也就是说，当前版本mumu12所采用的sdk版本没有对应的minicap.so文件，想硬塞其他版本的文件也无法运行。这也是之前我开始想要对其进行更新的原因，因为我就是用的mumu，更新完脚本直接暴毙了。同时，我还对新版本的minicap做了优化，本来画面捕捉可能产生下半部分灰屏以及画面抖动的情况。目前则不会出现。如果你发现sdk版本高于31，那么请在下一个模块进行win32gui模式捕捉的尝试。

下一个是窗口捕获的设置。第一栏是为了方便复制多个模拟器信息的捕获设置所用，目前作用不是很大。点击复制后可以将右侧选中的模拟器捕获设置复制到当前的模拟器捕获设置。下一列将选择该模拟器使用minicao模式还是win32gui模式。如果在上一个模块minicap.so文件植入失败，那么在这里选择win32gui选项，并点击最下方的捕获测试按钮，查看右侧画面是否正常捕获。第三行及以下都是针对win32gui的设置，在minicap模式下，下列设置均为无效设置。第三行是窗口的标题，我并没有为其配置模糊搜索，所以你需要准确的窗口标题，否则捕获测试会捕获整个桌面作为图像。由于我尚未对窗口进行边框检测，导致直接捕获的窗口包含侧边栏和标题，将来可能通过直线检测或者其他手段自动将其去除。mumu12模拟器窗口大小也会影响捕获的图片大小，因此需要设置窗口的rect设置也就是设置真实画面左上角对于窗口左上角的位置以及画面的宽高。你需要不断调整其值使得画面恰好包括模拟器的真实画面。同时其宽高比最好为或者接近16：9.

最后的搓丸子，还只是个想法而已。
